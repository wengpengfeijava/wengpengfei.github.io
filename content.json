{"meta":{"title":"亡灵走秀","subtitle":"善恶无报，乾坤有失。","description":"我们所处的世界毫无意义 而活在这里的我们也没有意义 没有意义的我们还想着这世界，而明知道就算知道这件事情没有意义本身，也是毫无意义的！","author":"wengpengfeijava@163.com","url":"http://wengpengfeijava.github.io"},"pages":[{"title":"tags","date":"2016-08-05T00:46:32.000Z","updated":"2016-08-05T00:46:32.477Z","comments":true,"path":"tags/index.html","permalink":"http://wengpengfeijava.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Browsersync 配置项","slug":"gulp/browsersync","date":"2016-08-09T08:35:04.000Z","updated":"2016-08-09T09:59:11.192Z","comments":true,"path":"2016/08/09/gulp/browsersync/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/09/gulp/browsersync/","excerpt":"","text":"下面将介绍在Browsersync 你能用到的所有的配置项 https://www.browsersync.io/docs/options/ UI Type: Objectport - Default: 3001weinre.port - Default: 8080 注：至少需要版本2.0.0 Browsersync包括一个用户界面，通过一个单独的端口访问，该用户界面可以控制所有的设备，推动同步更新和更多 123456789101112131415// 修改默认的端口 ui: &#123; port: 8080 &#125; // 修改默认的weinre端口 ui: &#123; port: 8080, weinre: &#123; port: 9090 &#125; &#125; // 禁止启动UI ui: false files Type: Array | StringDefault: false browsersync可以看你的文件，你的工作。您所做的更改将被注入到页面（CSS和图像）或将导致所有的浏览器做一个完整的页面刷新 1234567891011121314151617181920212223// single file browserSync(&#123; files: &quot;app/css/style.css&quot; &#125;); // multiple files browserSync(&#123; files: [&quot;app/css/style.css&quot;, &quot;app/js/*.js&quot;] &#125;); // patterns + 1 with custom callback // since 2.6.0 browserSync(&#123; files: [ &quot;wp-content/themes/**/*.css&quot;, &#123; match: [&quot;wp-content/themes/**/*.php&quot;], fn: function (event, file) &#123; /** Custom event handler **/ &#125; &#125; ] &#125;); watchOptions Type: ObjectDefault: undefined Note: requires at least version 2.6.0 文件看选项，通过沿Chokidar。检查文档中可用的选项 12345678910111213141516171819// Options passed to Chokidar watchOptions: &#123; ignoreInitial: true, ignored: &apos;*.txt&apos; &#125; // options for chokidar with custom callback // since 2.6.0 files: [ &#123; match: [&quot;wp-content/themes/**/*.php&quot;], fn: function (event, file) &#123; /** Custom event handler **/ &#125;, options: &#123; ignored: &apos;*.txt&apos; &#125; &#125; ] Type: Object | BooleanDefault: false 使用内置的静态服务器为基础的HTML / CSS JS /网站. 123456789101112131415161718192021222324252627282930// Serve files from the app directoryserver: &quot;app&quot;// Serve files from the current directoryserver: true// Serve files from the app directory with directory listingserver: &#123; baseDir: &quot;app&quot;, directory: true&#125;// Multiple base directoriesserver: [&quot;app&quot;, &quot;dist&quot;]// Serve files from the app directory, with a specific index filenameserver: &#123; baseDir: &quot;app&quot;, index: &quot;index.htm&quot;&#125;// Since version 1.2.1// The key is the url to match// The value is which folder to serve (relative to your current working directory)server: &#123; baseDir: &quot;app&quot;, routes: &#123; &quot;/bower_components&quot;: &quot;bower_components&quot; &#125;&#125; proxyType: String | Object | Boolean target - Default: undefinedws - Default: undefinedmiddleware - Default: undefinedreqHeaders - Default: undefinedproxyReq - Default: undefinedproxyRes - Default: undefined Proxy an EXISTING vhost. Browsersync will wrap your vhost with a proxy URL to view your site. 12345678910111213141516171819202122232425262728293031323334353637383940// Using a vhost-based urlproxy: &quot;local.dev&quot;// Using a localhost address with a portproxy: &quot;localhost:8888&quot;// Using localhost sub directoriesproxy: &quot;localhost/site1&quot;// When your app also uses web sockets// NOTE: requires 2.8.1 or aboveproxy: &#123; target: &quot;http://yourlocal.dev&quot;, ws: true&#125;proxy: &#123; target: &quot;http://yourlocal.dev&quot;,&#125;// Modify the server request before it hits your application// NOTE: requires v2.12.1proxy: &#123; target: &quot;http://yourlocal.dev&quot;, proxyReq: [ function(proxyReq) &#123; proxyReq.setHeader(&apos;X-Special-Proxy-Header&apos;, &apos;foobar&apos;); &#125; ]&#125;// Modify the server response after it&apos;s returned from the proxyproxy: &#123; target: &quot;http://yourlocal.dev&quot;, proxyRes: [ function(proxyRes, req, res) &#123; console.log(proxyRes.headers); &#125; ]&#125; portType: Number Default: 3000 12// Use a specific port (instead of the one auto-detected by Browsersync)port: 8080 middlewareType: Function | Array Default: false 1234567891011121314151617181920212223242526272829303132// Multiple Global Middlewaresmiddleware: [ function (req, res, next) &#123; /** First middleware handler **/ &#125;, function (req, res, next) &#123; /** Second middleware handler **/ &#125;]// Per-route middleware// NOTE: requires v2.12.1middleware: [ &#123; route: &quot;/api&quot;, handle: function (req, res, next) &#123; // handle any requests at /api &#125; &#125;]// Per-route + global middleware// NOTE: requires v2.12.1middleware: [ require(&quot;compression&quot;)(), // global &#123; route: &quot;/api&quot;, // per-route handle: function (req, res, next) &#123; // handle any requests at /api &#125; &#125;] serveStaticType: Array Default: [] 注：至少需要版本2.8.0 Add additional directories from which static files should be served. Should only be used in proxy or snippet mode. 12345678var bs = require(&apos;browser-sync&apos;).create();// Run in proxy mode with static files also served// from current directory + ./app/cssbs.init(&#123; proxy: &quot;http://www.bbc.co.uk&quot;, serveStatic: [&apos;.&apos;, &apos;./app/css&apos;]&#125;); httpsType: Boolean Default: undefined 注：至少需要版本1.3.0 Enable https for localhost development. Note - this is not needed for proxy option as it will be inferred from your target url. 12345678910111213141516171819// Enable HTTPS for static file serverbrowserSync(&#123; server: &quot;./app&quot;, https: true&#125;);// Enable HTTPS for snippet modebrowserSync(&#123; https: true&#125;);// Enable HTTPS mode with custom certificatesbrowserSync(&#123; server: &quot;./app&quot;, https: &#123; key: &quot;path-to-custom.key&quot;, cert: &quot;path-to-custom.crt&quot; &#125;&#125;); ghostModeType: Object clicks - Default: truescroll - Default: trueforms - Default: true 点击，滚动和窗体上的任何设备上的输入将被镜像到所有其他人 123456789// Here you can disable/enable each feature individuallyghostMode: &#123; clicks: true, forms: true, scroll: false&#125;// Or switch them all off in one goghostMode: false logLevelType: String Default: info 可以是“信息”，“调试”，“警告”，或“沉默” 12345678// Show me additional info about the processlogLevel: &quot;debug&quot;// Just show basic infologLevel: &quot;info&quot;// output NOTHING to the commandlinelogLevel: &quot;silent&quot; logPrefixType: String Default: BS 注：至少需要版本1.5.1 更改控制台日志记录前缀。如果你创建你自己的项目的基础上browsersync 12345logPrefix: &quot;My Awesome Project&quot;// [My Awesome Project] Local URL: http://localhost:3000// [My Awesome Project] Watching files....// [My Awesome Project] File changed: &quot;index.html&quot; logConnectionsType: BooleanDefault: false 12345// Log connectionslogConnections: true// Don&apos;t log connectionslogConnections: false logFileChangesType: Boolean Default: true 12345// Log information about changed fileslogFileChanges: true// Don&apos;t log file changeslogFileChanges: false logSnippetType: : Boolean Default: true 注：至少需要版本1.5.2 `Log the snippet to the console when you’re in snippet mode (no proxy/server)`` 12// Don&apos;t ever log the snippetlogSnippet: false snippetOptionsType: Object async - Default: undefinedblacklist - Default: undefinedwhitelist - Default: undefinedrule.match - Default: /$/rule.fn - Default: Function 注：至少需要版本2.0.0 You can control how the snippet is injected onto each page via a custom regex + function. You can also provide patterns for certain urls that should be ignored from the snippet injection. 123456789101112131415// Customise the placement of the snippet// and ignore certain pathssnippetOptions: &#123; // Ignore all HTML files within the templates folder ignorePaths: &quot;templates/*.html&quot;, // Provide a custom Regex for inserting the snippet. rule: &#123; match: /&lt;\\/body&gt;/i, fn: function (snippet, match) &#123; return snippet + match; &#125; &#125;&#125; rewriteRulesType: Array | Boolean Default: false 注：至少需要版本2.4.0 Add additional HTML rewriting rules. 1234567891011121314151617// Replace every occurrence of the word Browsersync with &apos;kittenz&apos;rewriteRules: [ &#123; match: /Browsersync/g, fn: function (req, res, match) &#123; return &apos;kittenz&apos;; &#125; &#125;]// Also accepts a string as a replacementrewriteRules: [ &#123; match: /(cats|kitten[sz]) are mediocre/g, replace: &quot;$1 are excellent&quot; &#125;] tunnelType: String | Boolean Default: null 123456// Tunnel the Browsersync server through a random Public URL// -&gt; http://randomstring23232.localtunnel.metunnel: true// Attempt to use the URL &quot;http://my-private-site.localtunnel.me&quot;tunnel: &quot;my-private-site&quot; onlineType: Boolean Default: undefined Some features of Browsersync (such as xip &amp; tunnel) require an internet connection, but if you&#39;re working offline, you can reduce start-up time by setting this option to false 12345// Will not attempt to determine your network status, assumes you&apos;re ONLINE.online: true// Will not attempt to determine your network status, assumes you&apos;re OFFLINEonline: false openType: Boolean | String Default: true Decide which URL to open automatically when Browsersync starts. Defaults to &quot;local&quot; if none set. Can be true, local, external, ui, ui-external, tunnel or false 1234567891011121314// Stop the browser from automatically openingopen: false// Open the localhost URLopen: &quot;local&quot;// Open the external URL - must be online.open: &quot;external&quot;// Open the UI - since 2.0.0open: &quot;ui&quot;// Open the tunnel URL - must also set the `tunnel` optionopen: &quot;tunnel&quot; browserType: String | Array Default: default 12345// Open the site in Chromebrowser: &quot;google chrome&quot;// Open the site in Chrome &amp; Firefoxbrowser: [&quot;google chrome&quot;, &quot;firefox&quot;] xipType: Boolean Default: falseRequires an internet connection - useful for services such as Typekit as it allows you to configure domains such as *.xip.io in your kit settings 12// Append &apos;.xip.io&apos; to the hostname. (eg: http://192.168.0.4.xip.io:3002)xip: true reloadOnRestartType: Boolean Default: false Reload each browser when Browsersync is restarted. 12// don&apos;t auto-reload all browsers following a Browsersync reloadreloadOnRestart: false notifyType: Boolean Default: true The small pop-over notifications in the browser are not always needed/wanted. 12// Don&apos;t show any notifications in the browser.notify: false scrollProportionallyType: Boolean Default: true 1scrollProportionally: false // Sync viewports to TOP position scrollThrottleType: Number Default: 0scrollThrottle: 100 // only send scroll events every 100 milliseconds scrollRestoreTechnique Type: String Default: ‘window.name’ Decide which technique should be used to restore scroll position following a reload. Can be window.name or cookie scrollElementsType: Array Default: [] 注：至少需要版本2.9.0 Sync the scroll position of any element on the page. Add any amount of CSS selectors 123// Sync the scrollTop position of the element .scroller// in addition to the window scrollscrollElements: [&apos;.scroller&apos;] scrollElementMappingType: Array Default: [] 注：至少需要版本2.9.0 Sync the scroll position of any element on the page - where any scrolled element will cause all others to match scroll position. This is helpful when a breakpoint alters which element is actually scrolling 123// Sync the scrollTop position between different elements// useful if your scroll container changes based on a breakpointscrollElementMapping: [&apos;.scroller-mobile&apos;, &apos;.scroller&apos;] reloadDelayType: Number Default: 0Time, in milliseconds, to wait before instructing the browser to reload/inject following a file change event 12// Wait for 2 seconds before any browsers should try to inject/reload a file.reloadDelay: 2000 reloadDebounceType: Number Default: 0 注：至少需要版本2.6.0 Wait for a specified window of event-silence before sending any reload events. 12// Wait 2 seconds after a reload event before allowing more.reloadDebounce: 2000 reloadThrottleType: Number Default: 0 注：至少需要版本2.13.0 Emit only the first event during sequential time windows of a specified duration. pluginsType: Array Default: [] 注：至少需要版本2.6.0 123456789101112131415161718192021User provided plugins// First run `npm install bs-html-injector`// Then provide the module nameplugins: [&quot;bs-html-injector&quot;]// If the plugin you are using requires options// just as bs-snippet-injector requires a &apos;file&apos; option,// you can pass an object instead like this.plugins: [ &#123; module: &quot;bs-snippet-injector&quot;, options: &#123; file: &quot;./app/index.php&quot; &#125; &#125;]// Shorthand for bs-html-injector + files: [&quot;*.html&quot;] option// NOTE: requires v2.12.1plugins: [&quot;bs-html-injector?files[]=*.html&quot;] injectChangesType: Boolean Default: true 12345// Inject CSS changesinjectChanges: true,// Don&apos;t try to inject, just do a page refreshinjectChanges: false, startPathType: String | Null Default: null 12// Open the first browser window at URL + &quot;/info.php&quot;startPath: &quot;/info.php&quot; minifyType: Boolean Default: trueWhether to minify client script, or not. 12// Don&apos;t minify the client-side JSminify: false hostType: String Default: null 12// Override host detection if you know the correct IP to usehost: &quot;192.168.1.1&quot; localOnlyType: Boolean Default: false注：至少需要版本2.14.0 Support environments where dynamic hostnames are not required (ie: electron) 12345// For use in electron developmentconst bs = require(&apos;browser-sync&apos;);bs.init(&#123; localOnly: true&#125;); codeSyncType: Boolean Default: true 12// Don&apos;t send any file-change events to browserscodeSync: false timestampsType: Boolean Default: true 12// Don&apos;t append timestamps to injected filestimestamps: false scriptPathType: Function Default: undefinedNote: requires at least version 1.5.0 Alter the script path for complete control over where the Browsersync Javascript is served from. Whatever you return from this function will be used as the script path. 12345// This will result in something like// http://localhost:3002/browser-sync/browser-sync-client.1.6.0.jsscriptPath: function (path, port, options) &#123; return options.getIn([&apos;urls&apos;, &apos;local&apos;]) + path;&#125; socketType: Object path - Default: “/browser-sync/socket.io”clientPath - Default: “/browser-sync”namespace - Default: “/browser-sync”domain - Default: undefinedport - Default: undefinedclients.heartbeatTimeout - Default: 5000 Note: requires at least version 1.6.2 Configure the Socket.IO path and namespace &amp; domain to avoid collisions. 123456789101112// To change the namespace used by Browsersyncsocket: &#123; namespace: &apos;/someothername&apos;&#125;// By default, Browsersync is configured to use the domain// of your page in order to connect to socket.io// eg: location.host + &apos;/browser-sync// but, should you need to change that, provide the `domain` propertysocket: &#123; domain: &apos;localhost:3000&apos;&#125;","categories":[],"tags":[{"name":"gulp","slug":"gulp","permalink":"http://wengpengfeijava.github.io/tags/gulp/"}]},{"title":"hexo 搭建自己的博客","slug":"hexo","date":"2016-08-05T06:33:14.000Z","updated":"2016-08-05T06:46:01.386Z","comments":true,"path":"2016/08/05/hexo/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/05/hexo/","excerpt":"","text":"一直想搭建一个自己的博客来记录自己的一些学习笔记。最近在网上无意中看到了可以借助GitHub来搭建自己的个人博客，于是就折腾了起来。我搭建博客用到的是GitHub+Hexo的搭配，下面就让我来介绍下我的博客搭建的整个过程。 Hexo Hexo是一个基于Node.js的快速简单的静态博客框架，利用它通过简单的几个命令就可以搭建一个个人博客。 A fast, simple &amp; powerful blog framework,powered by Node.js. 安装Hexo 我是在Windows上面进行搭建的，所以我这里就介绍下Windows上面的安装方法。安装Hexo首先需要下面两个条件: node git 这两个的安装方法大家Google下就好了，一堆堆的。有了这些我们就可以利用npm命令来安装hexo了。 1$ npm install hexo -g 安装完hexo之后可以开始初始化博客了。 初始化博客 初始化Hexo博客只需要进入博客目录，然后执行下面这条命令就可以了 1$ hexo init 生成博客初始化博客之后博客目录下会产生一些配置文件和模板文件，现在就要利用这些模板文件来生成我们的静态博客文件，通过下面这条命令就可以生成我们的博客 1$ hexo generate 执行完命令之后，在博客目录下会产生一个public文件夹，这里面存放的就是我们的博客静态文件。 本地部署生成博客之后我们就可以开始在本地部署我们的博客 1$ hexo server 现在我们打开浏览器访问http://localhost:4000 就可以看到我们的博客了。 1$ 部署到GitHub 通过上面这些步骤我们只是在本地搭建起了博客，要让别人看到还需要把它部署到GitHub上。首先，当然是需要==申请==一个GitHub账号，然后==新建==一个Repository，接着在命名的时候需要注意，GitHubPage的名字必须用户名.github.com或者用户名.github.io。 创建完Repository之后，我们要配置Hexo的github地址然后才可以把我们的博客部署到GitHub上面。在博客目录底下打开_congig.yml，这就是Hexo的配置文件。找到下面这段代码 Deployment - 1 Docs: http://hexo.io/docs/deployment.html 12deploy:type: 把上面的内容替换成你刚才创建的Repository地址，如下: Deployment - 2 Docs: http://hexo.io/docs/deployment.html 1234deploy: type: githubrepository: https://github.com/用户名/用户名.github.io.gitbranch: master 创建Repository并且修改配置文件之后我们就可以把我们的博客部署到GitHub上面了，通过下面这个命令，过程中需要输入Git账号和密码: 1$ hexo deploy 打开浏览器访问http://用户名.github.com 或者 http://用户名.github.io ，部署之后大约十分钟就可以看到博客效果了。 配置博客 通过上面的步骤我们完成了博客的基本搭建工作，我们还可以通过修改配置文件来进行博客的个性化定制。 首先是博客的标题以及作者，通过修改_congig.yml中相应的字段就可以设置标题和作者，如下: Sitetitle: &lt;h1&gt;My Coding Life&lt;/h1&gt; //标题 subtitle: Better Wife , Better Life //副标题 description: Better Wife , Better Life //描述内容 author: Bin //作者 email: lakb248@163.com //邮箱 language: zh-CN //语言 其次是博客的主题，Hexo有许多现成的主题可以选择，在这里可以得到。 下载相应的主题放到博客目录底下的themes文件夹底下。最后需要修改_config.yml中theme字段的值，如下: Extensions Plugins: https://github.com/tommy351/hexo/wiki/Plugins Themes: https://github.com/tommy351/hexo/wiki/Themes theme: 主题名 | 通过上面这一系列步骤，我们的个人博客可以正式上线了。Hexo还有很多其他的功能，比如评论，RSS。更多内容大家请看官方文档。","categories":[],"tags":[]},{"title":"简单的cms实现(==Angular==)","slug":"angular/cms/simple_cms","date":"2016-08-05T03:36:00.000Z","updated":"2016-08-05T06:32:25.530Z","comments":true,"path":"2016/08/05/angular/cms/simple_cms/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/05/angular/cms/simple_cms/","excerpt":"","text":"简单的cms实现基于angular + java","categories":[{"name":"angular ","slug":"angular","permalink":"http://wengpengfeijava.github.io/categories/angular/"}],"tags":[{"name":"angular cms","slug":"angular-cms","permalink":"http://wengpengfeijava.github.io/tags/angular-cms/"}]},{"title":"项目使用的新奇玩意","slug":"use","date":"2016-08-05T01:20:55.383Z","updated":"2016-08-05T01:24:10.100Z","comments":true,"path":"2016/08/05/use/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/05/use/","excerpt":"","text":"多说 使用QQ关联登录 cnzz 466077335@qq.com 密码和github一样","categories":[],"tags":[]},{"title":"Angular Seo 优化","slug":"angular/seo/angular_seo","date":"2016-08-04T09:55:43.303Z","updated":"2016-08-04T09:57:11.439Z","comments":true,"path":"2016/08/04/angular/seo/angular_seo/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/04/angular/seo/angular_seo/","excerpt":"","text":"seo查询关键字 prerender.io + angularjs html5 mode","categories":[],"tags":[]},{"title":"创建一个cms","slug":"angular/cms/build_cms","date":"2016-08-04T09:50:56.740Z","updated":"2016-08-04T09:55:03.509Z","comments":true,"path":"2016/08/04/angular/cms/build_cms/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/04/angular/cms/build_cms/","excerpt":"","text":"项目基于java + angularjs 1创建一个","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2016-08-04T07:08:34.007Z","updated":"2016-08-04T07:08:34.008Z","comments":true,"path":"2016/08/04/hello-world/","link":"","permalink":"http://wengpengfeijava.github.io/2016/08/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}